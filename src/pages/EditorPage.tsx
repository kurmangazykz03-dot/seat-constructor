import { useState } from "react";

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã UI
import PropertiesPanel from "../components/editor/PropertiesPanel";
import SeatmapCanvas from "../components/editor/SeatMapCanvas";
import Toolbar from "../components/editor/ToolBar";
import TopBar from "../components/editor/TopBar";

// –•—É–∫ –¥–ª—è Undo/Redo –∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
import { useHistory } from "../hooks/useHistory";

import { Row, Seat, Zone } from "../types/types";

// ------------------ –¢–∏–ø –¥–ª—è –≤—Å–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å—Ö–µ–º—ã ------------------
export interface SeatmapState {
  zones: Zone[];
  rows: Row[];
  seats: Seat[];
  stage: {
    scale: number;
    x: number;
    y: number;
  };
}

// ------------------ –ù–∞—á–∞–ª—å–Ω–æ–µ (–ø—É—Å—Ç–æ–µ) —Å–æ—Å—Ç–æ—è–Ω–∏–µ ------------------
const INITIAL_STATE: SeatmapState = {
  zones: [],
  rows: [],
  seats: [],
  stage: {
    scale: 1,
    x: 0,
    y: 0,
  },
};

// ======================= –û–°–ù–û–í–ù–û–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –°–¢–†–ê–ù–ò–¶–´ =======================
function EditorPage() {
  // ------------------ –£–ü–†–ê–í–õ–ï–ù–ò–ï –û–°–ù–û–í–ù–´–ú –°–û–°–¢–û–Ø–ù–ò–ï–ú (–î–ê–ù–ù–´–ú–ò) ------------------
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ö—É–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Å—Ö–µ–º—ã –∏ –∏—Å—Ç–æ—Ä–∏–µ–π –∏–∑–º–µ–Ω–µ–Ω–∏–π.
  // –í—Å–µ, —á—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å –º–µ—Å—Ç–∞–º–∏, —Ä—è–¥–∞–º–∏ –∏ –∑–æ–Ω–∞–º–∏, —Ç–µ–ø–µ—Ä—å –∂–∏–≤–µ—Ç –∑–¥–µ—Å—å.
  const {
    state, // –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (state.seats, state.rows, state.zones)
    setState, // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è (—Å–æ–∑–¥–∞–µ—Ç –∑–∞–ø–∏—Å—å –≤ –∏—Å—Ç–æ—Ä–∏–∏)
    undo, // –§—É–Ω–∫—Ü–∏—è –æ—Ç–º–µ–Ω—ã
    redo, // –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞
    clear, // –§—É–Ω–∫—Ü–∏—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ —Å —Å–±—Ä–æ—Å–æ–º –∏—Å—Ç–æ—Ä–∏–∏
    canUndo, // –§–ª–∞–≥, –º–æ–∂–Ω–æ –ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ
    canRedo, // –§–ª–∞–≥, –º–æ–∂–Ω–æ –ª–∏ –≤–µ—Ä–Ω—É—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ
  } = useHistory<SeatmapState>(INITIAL_STATE);

  // ------------------ –£–ü–†–ê–í–õ–ï–ù–ò–ï UI-–°–û–°–¢–û–Ø–ù–ò–ï–ú ------------------
  // –≠—Ç–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç –∏—Å—Ç–æ—Ä–∏–∏ (undo/redo) –∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ JSON.
  // –û–Ω–∏ –æ—Ç–≤–µ—á–∞—é—Ç —Ç–æ–ª—å–∫–æ –∑–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏.
  const [selectedIds, setSelectedIds] = useState<string[]>([]);
  const [currentTool, setCurrentTool] = useState<"select" | "add-seat" | "add-row" | "add-zone">(
    "select"
  );

  // ======================= –§–£–ù–ö–¶–ò–ò-–û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –î–õ–Ø TOPBAR =======================

  // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ localStorage –±—Ä–∞—É–∑–µ—Ä–∞
  const handleSave = () => {
    try {
      localStorage.setItem("seatmap_schema", JSON.stringify(state));
      alert("–°—Ö–µ–º–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ!");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏:", error);
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ö–µ–º—É.");
    }
  };

  // üì• –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑ localStorage
  const handleLoad = () => {
    try {
      const savedStateJSON = localStorage.getItem("seatmap_schema");
      if (savedStateJSON) {
        const parsedState: SeatmapState = JSON.parse(savedStateJSON);

        // ‚úÖ –í–∞–∂–Ω–æ: —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é stage
        setState((prev) => ({
          ...parsedState,
          stage: {
            ...parsedState.stage, // <-- –Ω–µ —Ç–µ—Ä—è–µ–º x/y/scale
          },
        }));

        alert("–°—Ö–µ–º–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!");
      } else {
        alert("–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è —Å—Ö–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.");
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:", error);
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ö–µ–º—É. –î–∞–Ω–Ω—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ–≤—Ä–µ–∂–¥–µ–Ω—ã.");
    }
  };

  // üóëÔ∏è –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Ö–æ–ª—Å—Ç–∞ –∏ –∏—Å—Ç–æ—Ä–∏–∏
  const handleClear = () => {
    if (
      window.confirm(
        "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—Å—Ç–∏—Ç—å —Å—Ü–µ–Ω—É? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å."
      )
    ) {
      clear(); // –ò—Å–ø–æ–ª—å–∑—É–µ–º `clear` –∏–∑ —Ö—É–∫–∞ useHistory
    }
  };

  // ·Éî·É•·É°·Éû·Éù·É†·É¢·Éò –≠–∫—Å–ø–æ—Ä—Ç —Å—Ö–µ–º—ã –≤ JSON-—Ñ–∞–π–ª
  const handleExport = () => {
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤—É—é –≤–ª–æ–∂–µ–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞, –∫–∞–∫ –≤—ã –∏ –ø—Ä–æ—Å–∏–ª–∏
    const exportData = {
      version: 1,
      hallName: "–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ª",
      zones: state.zones.map((zone) => ({
        id: zone.id,
        name: zone.label,
        ...zone, // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∑–æ–Ω—ã (x, y, width, etc.)
        rows: state.rows
          .filter((row) => row.zoneId === zone.id)
          .map((row) => ({
            id: row.id,
            label: row.label,
            ...row, // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ —Ä—è–¥–∞
            seats: state.seats
              .filter((seat) => seat.rowId === row.id)
              .map((seat) => ({
                id: seat.id,
                label: seat.label,
                ...seat, // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –º–µ—Å—Ç–∞
              })),
          })),
      })),
    };

    const jsonString = JSON.stringify(exportData, null, 2); // `null, 2` –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const blob = new Blob([jsonString], { type: "application/json" });
    const url = URL.createObjectURL(blob);

    const link = document.createElement("a");
    link.href = url;
    link.download = "seatmap-schema.json";
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url); // –û—á–∏—â–∞–µ–º –ø–∞–º—è—Ç—å
  };
  const handleDelete = () => {
    if (selectedIds.length === 0) return;

    setState((prev) => ({
      ...prev,

      seats: prev.seats.filter((s) => !selectedIds.includes(s.id)),

      rows: prev.rows.filter((r) => !selectedIds.includes(r.id)),

      zones: prev.zones.filter((z) => !selectedIds.includes(z.id)),
    }));

    setSelectedIds([]);
  };

  // ======================= –†–ï–ù–î–ï–† –ö–û–ú–ü–û–ù–ï–ù–¢–ê =======================
  return (
    <div className="flex flex-col w-full h-screen bg-gray-100">
      <TopBar
        onSave={handleSave}
        onLoad={handleLoad}
        onClear={handleClear}
        onExport={handleExport}
        onUndo={undo}
        onRedo={redo}
        canUndo={canUndo}
        canRedo={canRedo}
      />

      <div className="flex flex-1 overflow-hidden">
        <Toolbar
          currentTool={currentTool}
          setCurrentTool={setCurrentTool}
          onDelete={handleDelete}
        />

        <main className="flex-1 bg-gray-50 p-4">
          <SeatmapCanvas
            // –ü–µ—Ä–µ–¥–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –Ω–∞—à–µ–≥–æ –µ–¥–∏–Ω–æ–≥–æ `state`
            seats={state.seats}
            rows={state.rows}
            zones={state.zones}
            // ‚ùó –°–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ: –ø–µ—Ä–µ–¥–∞–µ–º –µ–¥–∏–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –í–°–ï–ì–û —Å–æ—Å—Ç–æ—è–Ω–∏—è
            setState={setState}
            // UI-—Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–µ–º –∫–∞–∫ –∏ —Ä–∞–Ω—å—à–µ
            selectedIds={selectedIds}
            setSelectedIds={setSelectedIds}
            currentTool={currentTool}
          />
        </main>

        <PropertiesPanel
          selectedIds={selectedIds}
          state={state} // –≤–µ—Å—å state —Å—Ä–∞–∑—É
          setState={setState} // –º–µ—Ç–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ–≥–æ state
        />
      </div>
    </div>
  );
}

export default EditorPage;
